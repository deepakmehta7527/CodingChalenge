//*Design add and search words*//
struct Trie{
       Trie* child[26];
       bool isEnd=false;
   };
    
    Trie *root;
    WordDictionary() {
        root=new Trie();
    }
    
    void addWord(string word) {
        Trie *cur=root;
        for(auto &ch:word){
            int pos=ch-'a';
            if(cur->child[pos]==NULL) cur->child[pos]=new Trie();
            cur=cur->child[pos];
        }
        cur->isEnd=true;
    }
    
    bool search(string word) {
        Trie *cur=root;
        return find(word,0,cur);
    }
    
    bool find(string &word,int index,Trie* cur){
        if(index==word.size()) return cur->isEnd;

        if(word[index]=='.'){
            for(int i=0;i<26;i++){
                if(cur->child[i] && find(word,index+1,cur->child[i])) return true;
            }  
        }else{
            int i=word[index]-'a';
            if(cur->child[i] && find(word,index+1,cur->child[i])) return true;
        }
        return false;
    }
