//1)Inorder Successor in BST

 // returns the inorder successor of the Node x in BST (rooted at 'root')
    Node * inOrderSuccessor(Node *root, Node *x)
    {
        //Your code here
     Node *successor=NULL;
     while(root!=NULL){
         if(x->data>=root->data)
         root=root->right;
         else{
         successor=root;
         root=root->left;
         }
     }
     return successor;
    }


//2)Inorder Traversal

 // Function to return a list containing the inorder traversal of the tree.
    vector<int> inOrder(Node* root) {
        // Your code here
        vector<int>ans;
        while(root){
             if(!root->left){
                ans.push_back(root->data);
                root=root->right;
            }
            else{
                Node *curr=root->left;
                while(curr->right and curr->right!=root){
                    curr=curr->right;
                }
              if(!curr->right){
                  curr->right=root;
                  root=root->left;
              }
              else{
                  curr->right=NULL;
                  ans.push_back(root->data);
                  root=root->right;
              }
            }
        }
        return ans;
    }